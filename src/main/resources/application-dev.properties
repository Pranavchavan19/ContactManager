spring.application.name=scm2.0
server.baseUrl=${BASE_URL:http://localhost:8081}
server.port=${SERVER_PORT:8081}
# mysql database configurations
#data source url
#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DB:scm20}
#spring.datasource.username=${MYSQL_USER}
#spring.datasource.password=${MYSQL_PASSWORD}
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect




#spring.datasource.url=jdbc:mysql://interchange.proxy.rlwy.net:14127/railway
#spring.datasource.username=root
#spring.datasource.password=CLKwzIuibomSddlRUDibKUsbTwaAHxOl
#
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#


# --- PostgreSQL DB Connection ---
#spring.datasource.url=jdbc:postgresql://dpg-d1ml3dje5dus73as0ca0-a.render.com:5432/scm20_o9v8
#spring.datasource.username=scm20_o9v8_user
#spring.datasource.password=JuWIGA7KOtbPriGPSQacK6Z0XbmBpbvT
#spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}


spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


# --- Hibernate ---
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# --- Optional ---
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true














# Google OAuth 2.0
 spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
 spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
 spring.security.oauth2.client.registration.google.scope=email,profile
 # Github OAuth 2.0
# spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
 spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
 spring.security.oauth2.client.registration.github.scope=email,profile
 # cloudinary configurations
 cloudinary.api.key=${CLOUDINARY_API_KEY}
 cloudinary.api.secret=${CLOUDINARY_API_SECRET}
 cloudinary.cloud.name=${CLOUDINARY_NAME}
 #Email configurations
 spring.mail.host=${EMAIL_HOST}
 spring.mail.port=${EMAIL_PORT}
 spring.mail.username=${EMAIL_USERNAME}
 spring.mail.password=${EMAIL_PASSWORD}
 spring.mail.properties.mail.smtp.auth=true
 spring.mail.properties.mail.smtp.starttls.enable=true
 spring.mail.properties.domain_name=${EMAIL_DOMAIN}
